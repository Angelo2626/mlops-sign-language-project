name: Python CI/CD Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --extra-index-url https://download.pytorch.org/whl/cpu

      - name: Lint with pylint
        run: |
          pylint --disable=C0114,C0116,C0301,C0303,C0304,C0411,R1725,C0103,W0612,R0914,R0915,R0912,R0801,R0402,W0611,W0718,W0621,E0606 src/

      - name: Test with pytest
        run: |
          pytest

      # Step per creare un modello fittizio per il test della build dell'app
      # In un workflow reale, qui si scaricherebbe il modello addestrato da un job precedente.
      # Per semplicità, ne creiamo uno vuoto.
      - name: Create dummy model for app build test
        run: |
          mkdir -p results/models
          touch results/models/sign_language_cnn.pth

      # Carichiamo la repository come artefatto per il prossimo job
      - name: Upload repository for build job
        uses: actions/upload-artifact@v4
        with:
          name: project-source
          path: .


  # JOB 2: Build e Push su Docker Hub
  build-and-push:
    name: Build and Push Docker - ${{ matrix.image_name }}
    needs: test
    runs-on: ubuntu-latest

    # === NOVITÀ: STRATEGY MATRIX ===
    # Esegue questo job più volte, una per ogni combinazione nella matrice.
    strategy:
      matrix:
        include:
          - image_name: sign-language-trainer
            dockerfile: Dockerfile
          - image_name: sign-language-app
            dockerfile: Dockerfile.app

    steps:
      # Scarichiamo il codice dal job precedente
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: project-source
          path: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          # Usiamo le variabili dalla matrix per il Dockerfile e il tag
          file: ./${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_name }}:latest
